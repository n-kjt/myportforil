<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="com.example.demo.dao.LearningDataMapper">
    
    <!--   学習項目とユーザー情報を取得-->
    <select id="getLearningData" resultType="com.example.demo.entity.LearningData">    
    SELECT ld.id, ld.name, ld.study_time, ld.category_id, ld.user_id,
       ld.created_at, ld.updated_at,
       c.name as category_name
       FROM learning_data ld
       LEFT JOIN categories c ON ld.category_id = c.id
       WHERE ld.user_id = #{userId}
       ORDER BY ld.category_id;
    </select> 
<!--  カテゴリ名を抽出-->
    <select id="findCategoryName" parameterType="int" resultType="string">
    SELECT name
    FROM categories
    WHERE id = #{categoryId}        
    </select>
    
<!--  学習項目の追加-->
    <insert id="insertLearningData" parameterType="com.example.demo.dto.LearningDataUpdateRequest">
        INSERT INTO learning_data (name, study_time, category_id,user_id, created_at, updated_at)
        VALUES (#{studyName}, #{studyTime}, #{categoryId}, #{userId}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    </insert>
    

  
<!--  学習項目の重複をチェック-->
 <select id="countByStudyName" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM learning_data
        WHERE name = #{studyName} AND user_id = #{userId}
    </select>
    
       <!--   学習時間の更新-->
       <update id="updateStudyTime">
       UPDATE learning_data
       SET study_time = #{studyTime}, updated_at = CURRENT_TIMESTAMP
       WHERE user_id = #{userId} AND id = #{entryId}
       </update>
       
 <!-- 学習データの削除 -->
  <delete id="deleteData" >
  delete from learning_data
  where id = #{entryId}
  </delete>
  
  <!--  学習データをカテゴリごと、月ごとに変更する -->
  <select id="MonthlyCategoryData" parameterType="long" resultType="com.example.demo.dto.LearningDataTotalRequest">
    SELECT 
        user_id,
        category_id,
        DATE_FORMAT(updated_at, '%Y-%m') AS month,
        SUM(study_time) AS total_study_time
    FROM 
        learning_data
    WHERE 
        user_id = #{userId}
    GROUP BY 
        user_id, category_id, DATE_FORMAT(updated_at, '%Y-%m');
</select>
  
</mapper>